<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: Python – 21.5 Automatisiertes Testen</title>
<meta name="title" content="Galileo Computing :: Python - 21.5 Automatisiertes Testen">
<meta name="author" content="Peter Kaiser, Johannes Ernesti">
<meta name="publisher" content="Galileo Press 2008">
<meta name="copyright" content="Galileo Press 2008">
<meta name="Description" content="Python - Das umfassende Handbuch – 21.5 Automatisiertes Testen">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="python_kapitel_21_004.htm">
<link rel="next" href="python_kapitel_21_006.htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=oppy"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=oppy"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=oppy" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_01_001.htm#mj67a594b305e4109145454ddc0d55999c">1 Einleitung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_02_001.htm#mjddfab2e530e1ced3efb614b75430300d">2 Überblick über Python</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_03_001.htm#mj936060d19c41bd12bf740798a2280ed0">3 Die Arbeit mit Python</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_04_001.htm#mj4c3be3990be6964addc0f6d0dc22f9d8">4 Der interaktive Modus</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_05_001.htm#mjddf21128ad2999d9e2a37e5112a0af06">5 Grundlegendes zu Python-Programmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_06_001.htm#mj3c43dbe4a08e5559d01e50286484c126">6 Kontrollstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_07_001.htm#mj4ebbbff6e4edb4fe615e242a01d77f27">7 Das Laufzeitmodell</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_08_001.htm#mj5434917b0e68fc12d539b3d9f605c69d">8 Basisdatentypen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_09_001.htm#mj7db54ea5091e23f706b1786ead1a782f">9 Benutzerinteraktion und Dateizugriff</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_10_001.htm#mjf74b0a739c10c2f7132913c19e91246f">10 Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_11_001.htm#mj3e41238df9387de38f2c931eba1bfeb9">11 Modularisierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_12_001.htm#mjcd1790d94142bd3f3a263231dbf0e3f7">12 Objektorientierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_13_001.htm#mj4ec2d9702da110e2dacd99679d3c813d">13 Weitere Spracheigenschaften</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_14_001.htm#mj22b60f53fd2027b93c076a524242b35b">14 Mathematik</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_15_001.htm#mjca183f321ad76918bcff867c4ffe4fab">15 Strings</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_16_001.htm#mjbc5f03a28f08a0ff6fff3f6eafb13845">16 Datum und Zeit</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_17_001.htm#mj1ca63a01c44856e9ecf8daef9834ac38">17 Schnittstelle zum Betriebssystem</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_18_001.htm#mj9e2e147ec7c1c409ab62884ed2afaa21">18 Parallele Programmierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_19_001.htm#mj5f8739be6f0fbee26d20565b4eeb8166">19 Datenspeicherung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_20_001.htm#mj6a610f312e2abfe628f8f50a8629087d">20 Netzwerkkommunikation</a></td>
</tr>
<tr>
<td><a class="navh" href="##mjd1f17b81729d3362ce1283c29a6064f5">21 Debugging</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_22_001.htm#mj7398fb17f09867fc123360d9b3066e94">22 Distribution von Python-Projekten</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_23_001.htm#mj2213eb2f7fc258333f88f873ac4a8051">23 Optimierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_24_001.htm#mj0bdf563dc1f3ef7638dab0dfb6bdd753">24 Grafische Benutzeroberflächen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_25_001.htm#mjbea967a6f2023581a39d524b6d91a141">25 Python als serverseitige Programmiersprache im WWW mit Django</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_26_001.htm#mj43e9e45f2e92366984e5b113f832514f">26 Anbindung an andere Programmiersprachen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_27_001.htm#mj30bed08497d2de4e7e72cbdeefa9fc78">27 Insiderwissen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_28_001.htm#mj8586665aff70d4410c8ba7725befb825">28 Zukunft von Python</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_A_001.htm#mjd7cca37a6c80d7ec0d715951f4148f05">A Anhang</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download.galileo-press.de/openbook/python/galileocomputing_python.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 4,8 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/1626?GPP=oppy" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="python_kapitel_21_004.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=oppy" class="navnav">Galileo Computing /</a><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=oppy" class="navnav"> &lt;openbook&gt; /</a><a href="index.htm" class="navnav"> Python</a></div></td>
<td align="right" width="25%"><div align="right"><a href="python_kapitel_21_006.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/1626?GPP=oppy" class="buchtitel">Python</a><span class="autor"> von Peter Kaiser, Johannes Ernesti</span><br><span class="untertitel">Das umfassende Handbuch - Aktuell zu Python 2.5</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/1626?GPP=oppy" class="navnav"><img src="common/9783836211109.gif" border="0" alt="Buch: Python" title="Buch: Python"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/1626?GPP=oppy"><span class="autor"><strong>Python</strong><br>gebunden, mit CD<br>819 S., 39,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1110-9</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="python_kapitel_21_001.htm#mjd1f17b81729d3362ce1283c29a6064f5" class="navnav">21 Debugging</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="python_kapitel_21_001.htm#mjc9ed2f03eb0e2dc23b8fcfef30a0e880" class="navnav">21.1 Der Debugger</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="python_kapitel_21_002.htm#mj7bb4e0fdebd5dc9dfe18d833bb52d5db" class="navnav">21.2 Inspizieren von Instanzen &#8211; inspect</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_21_002.htm#mj30443824b855deb14b2106456abba8ae" class="navnav">21.2.1 Datentypen, Attribute und Methoden</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_21_002.htm#mj26cf2cec03b118c739fc0c825d9ea501" class="navnav">21.2.2 Quellcode</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_21_002.htm#mj8b1fd73c253dea118d50990cc7b54bb3" class="navnav">21.2.3 Klassen und Funktionen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="python_kapitel_21_003.htm#mjbfa58d234253bf05a2380680f0407805" class="navnav">21.3 Formatierte Ausgabe von Instanzen &#8211; pprint</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="python_kapitel_21_004.htm#mj9d693b2a9ceb411a7e63099048b7290f" class="navnav">21.4 Logdateien &#8211; logging</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_21_004.htm#mj0ed595222838429b2af6515588091b69" class="navnav">21.4.1 Das Meldungsformat anpassen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_21_004.htm#mj53cbe44b8a4f8b6f2d1151cf0c78a680" class="navnav">21.4.2 Logging Handler</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mj0006b6d104143c9d0eb05fe0e3418768" class="navh">21.5 Automatisiertes Testen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj283ed24cbfec45887f9207dc538785ba" class="navh">21.5.1 Testfälle in Docstrings &#8211; doctest</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj833e694a147693a7840c4727b047fd14" class="navh">21.5.2 Unit Tests &#8211; unittest</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="python_kapitel_21_006.htm#mjf3af0f14f9fbd165ee0566cf30eb3f53" class="navnav">21.6 Traceback-Objekte &#8211; traceback</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="python_kapitel_21_007.htm#mjd9a88b16927a4a97c0d43c013cd80600" class="navnav">21.7 Analyse des Laufzeitverhaltens</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_21_007.htm#mj2c6ec836b07cb7f425660b5bd840b9c7" class="navnav">21.7.1 Laufzeitmessung &#8211; timeit</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_21_007.htm#mj37c250b6464b8c5c176a4619f7669d53" class="navnav">21.7.2 Profiling &#8211; cProfile</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_21_007.htm#mj17fb8dda4fb94ebbed32afccbbfe12cb" class="navnav">21.7.3 Tracing &#8211; trace</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mj0006b6d104143c9d0eb05fe0e3418768" name="mj0006b6d104143c9d0eb05fe0e3418768"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">21.5</span><span class="cfett"> <a id="Rxx_ref178516968" name="Rxx_ref178516968"></a><a id="Rxx_ref178516950" name="Rxx_ref178516950"></a>Automatisiertes Testen</span>  <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Pythons Standardbibliothek stellt zwei Module zur testgetriebenen Entwicklung (engl. <span class="ckursiv">test-driven development</span>) bereit. Unter <span class="ckursiv">testgetriebener Entwicklung</span> versteht man eine Art der Programmierung, bei der viele kleine Abschnitte des Programms, sogenannte <span class="ckursiv">Unit</span><span class="ckursiv">s</span>, durch automatisierte Testdurchläufe auf Fehler geprüft werden. Bei der testgetriebenen Entwicklung wird das Programm nach kleineren, in sich geschlossenen Arbeitsschritten so lange verbessert, bis es wieder alle bisherigen und alledazu gekommenen Tests besteht. Auf diese Weise können sich durch das Hinzufügen von neuem Code keine Fehler in alten, bereits getesteten Code einschleichen.</p>
<p>In Python ist das möglicherweise bekannte Konzept der Unit Tests im Modul <span class="clisting">unittest</span> implementiert. Das Modul <span class="clisting">doctest</span> ermöglicht es, Testfälle innerhalb eines Docstrings, beispielsweise einer Funktion, unterzubringen. Im Folgenden werden wir uns zunächst mit dem Modul <span class="clisting">doctest</span> beschäftigen, um danach zum Modul <span class="clisting">unittest</span> voranzuschreiten.</p><a id="mj283ed24cbfec45887f9207dc538785ba" name="mj283ed24cbfec45887f9207dc538785ba"></a><a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3"><span class="cfett">21.5.1</span><span class="cfett"> <a id="Rxx_ref180766611" name="Rxx_ref180766611"></a><a id="Rxx_ref180766585" name="Rxx_ref180766585"></a>Testfälle in Docstrings &#8211; doctest</span>  <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Das Modul <span class="clisting">doctest</span> erlaubt es, Testfälle innerhalb des Docstrings einer Funktion, Methode, Klasse oder eines Moduls zu erstellen, die beim Aufruf der im Modul <span class="clisting">doctest</span> enthaltenen Funktion <span class="clisting">testmod</span> getestet werden. Die Testfälle innerhalb eines Docstrings werden dabei nicht in einer komplizierten neuen Definitionssprache verfasst, sondern können direkt aus einer Sitzung im interaktiven Modus in den Docstring kopiert werden.</p>
<p>Beachten Sie bei der Verwendung von Doctests, dass Docstrings auch bzw. hauptsächlich für die Dokumentation beispielsweise einer Funktion gedacht sind. Aus diesem Grund sollten Sie die Testfälle im Docstring möglichst einfach und lehrreich halten, sodass der resultierende Docstring auch in Dokumentationen Ihres Programms  verwendet werden kann.</p>
<p>Das folgende Beispiel soll die Verwendung des Moduls <span class="clisting">doctest</span> anhand der Funktion <span class="clisting">fak</span> erläutern, die die Fakultät einer ganzen Zahl berechnen und zurückgeben soll.</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">import</span> doctest<span class="cfett"> 
import</span> math<br>
<span class="cfett">def</span> fak(n): 
    """ 
        Berechnet die Fakultaet einer ganzen Zahl. 
 
        &gt;&gt;&gt; fak(5) 
        120 
        &gt;&gt;&gt; fak(10) 
        3628800 
        &gt;&gt;&gt; fak(20) 
        2432902008176640000L 
 
        Es muss eine positive ganze Zahl uebergeben werden. 
 
        &gt;&gt;&gt; fak(-1) 
        Traceback (most recent call last): 
        ... 
        ValueError: Keine negativen Zahlen! 
        &gt;&gt;&gt; fak(1.5) 
        Traceback (most recent call last): 
        ... 
        ValueError: Keine Gleitkommazahlen! 
    """ 
    res = 1 
   <span class="cfett"> for</span> i<span class="cfett"> in</span> xrange(2, n+1): 
        res *= i 
   <span class="cfett"> return</span> res<br>
<span class="cfett">if</span> __name__ == "__main__": 
    doctest.testmod()</pre></div>
<p>Im Docstring der Funktion <span class="clisting">fak</span> steht zunächst ein erklärender Text. Dann folgt, durch eine leere Zeile davon abgetrennt, ein Auszug aus Pythons interaktivem Modus, in dem Funktionsaufrufe von <span class="clisting">fak</span> mit ihren Rückgabewerten stehen. Diese Testfälle werden beim Ausführen des Tests nachvollzogen und entweder für wahr oder für falsch befunden.</p>
<p>Auf diese einfachen Fälle folgen, jeweils durch eine Leerzeile eingeleitet, ein weiterer erklärender Text sowie zwei Ausnahmefälle, in denen eine negative Zahl bzw. eine Gleitkommazahl übergeben wurden. Beachten Sie, dass Sie den Stacktrace eines auftretenden Tracebacks im Docstring weglassen können. Auch die im Beispiel stattdessen geschriebenen Auslassungszeichen sind optional.</p>
<p>Die beiden letzten Testfälle wurden in der Funktion noch nicht berücksichtigt, sodass diese im nun durchzuführenden Test fehlschlagen sollten. Um den Test zu starten, muss die Funktion <span class="clisting">testmod</span> des Moduls <span class="clisting">doctest</span> aufgerufen werden. Aufgrund der <span class="clisting">if</span>-Abfrage</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">if</span> __name__ == "__main__": 
    doctest.testmod()</pre></div>
<p>wird diese Funktion immer dann aufgerufen, wenn die Programmdatei direkt ausgeführt wird. Der Test wird hingegen nicht durchgeführt, wenn die Programmdatei von einem anderen Python-Programm als Modul eingebunden wird.</p>
<p>Im provozierten Fehlerfall lautet das Testresultat folgendermaßen. Zur Rettung des Regenwaldes haben wir uns hier auf das Abdrucken eines der fehlgeschlagenen Testfälle beschränkt.</p>
<div class="listing"><pre class="prettyprint">***************************************************************** 
File "fak.py", line 21, in __main__.fak 
Failed example: 
    fak(1.5) 
Expected: 
    Traceback (most recent call last): 
    ... 
    ValueError: Keine Gleitkommazahlen! 
Got: 
    1 
***************************************************************** 
1 items had failures: 
   2 of   5 in __main__.fak 
***Test Failed*** 2 failures.</pre></div>
<p>Wenn wir die Funktion dahingehend korrigieren, dass sie im Falle unpassender Parameter die erwarteten Exceptions wirft:</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">def</span> fak(n): 
    """ 
        […] 
    """ 
   <span class="cfett"> if</span> n &lt; 0: 
       <span class="cfett"> raise</span> ValueError("Keine negativen Zahlen!")<br>
   <span class="cfett"> if</span> math.floor(n) != n: 
       <span class="cfett"> raise</span> ValueError("Keine Gleitkommazahlen!")<br>
    res = 1 
   <span class="cfett"> for</span> i<span class="cfett"> in</span> xrange(2, n+1): 
        res *= i 
   <span class="cfett"> return</span> res</pre></div>
<p>werden bei erneutem Durchführen des Tests keine Fehler mehr angezeigt. Um genau zu sein: Es wird überhaupt nichts angezeigt. Das liegt daran, dass generell nur fehlgeschlagene Testfälle auf dem Bildschirm ausgegeben werden. Sollten Sie auch auf die Ausgabe geglückter Testfälle bestehen, können Sie die Programmdatei mit der Option <span class="clisting">-v</span> (für <span class="ckursiv">verbose</span>) starten.</p>
<p>Bei der Verwendung von Doctests sollten Sie unbedingt beachten, dass die in den Docstrings geschriebenen Vorgaben Zeichen für Zeichen mit den Ausgaben der intern ausgeführten Testfälle verglichen werden. Dabei sollten Sie immer im Hinterkopf behalten, dass die Ausgaben bestimmter Datentypen nicht immer gleich sind. So stehen beispielsweise die Schlüssel/Wert-Paare eines Dictionarys in keiner garantierten Reihenfolge, sodass Sie innerhalb eines Doctests nie ein Dictionary als Ergebnis ausgeben sollten. Des Weiteren gibt es Informationen, die vom Interpreter oder anderen Gegebenheiten abhängen, beispielsweise entspricht die Identität einer Instanz intern ihrer Speicheradresse und wird sich deswegen natürlich beim Neustart des Programms ändern.</p>
<p>Eine weitere Besonderheit, auf die Sie achten müssen, ist, dass eine Leerzeile in der erwarteten Ausgabe einer Funktion durch den String <span class="clisting">&lt;BLANKLINE&gt;</span> gekennzeichnet werden muss, da eine Leerzeile als Trennung zwischen Testfällen und Dokumentation fungiert.</p>
<h4 class="t4"><span class="cfett">Flags</span></h4>
<p>Um einen Testfall genau an Ihre Bedürfnisse anzupassen, können Sie sogenannte <span class="ckursiv">Flags</span> vergeben. Das sind Einstellungen, die Sie aktivieren oder deaktivieren können. Ein Flag wird in Form eines Kommentars hinter den Testfall im Docstring geschrieben. Wird das Flag von einem Plus (<span class="clisting">+</span>) eingeleitet, wird es aktiviert, bei einem Minus (<span class="clisting">-</span>) deaktiviert. Bevor wir zu einem konkreten Beispiel kommen, sollen die beiden wichtigsten Flags eingeführt werden.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter"><strong>Tabelle 21.4    </strong>Doctest-Flags
</caption>
<tr>
<td class="tabellenkopf"><span class="cfett">Flag</span>
</td>
<td class="tabellenkopf"><span class="cfett">Bedeutung</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="clisting"><span class="clisting">ELLIPSIS</span></pre></div>
</td>
<td class="tabellentext">
<p>Wenn dieses Flag gesetzt ist, kann die Angabe <span class="clisting">...</span> für eine beliebige Ausgabe einer Funktion verwendet werden. So können veränderliche Angaben wie Speicheradressen oder Ähnliches in größeren Ausgaben überlesen werden.</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="clisting"><span class="clisting">NORMALIZE_WHITESPACES</span></pre></div>
</td>
<td class="tabellentext">
<p>Wenn dieses Flag gesetzt ist, werden Whitespace-Zeichen nicht mit in den Ergebnisvergleich einbezogen. Das ist besonders dann interessant, wenn man ein langes Ergebnis auf mehrere Zeilen umbrechen möchte.</p>
</td>
</tr>
</table><br><p>In einem einfachen Beispiel möchten wir den Doctest der bereits bekannten Fakultätsfunktion um die Berechnung der Fakultät einer relativ großen Zahl erweitern. Da es müßig wäre, alle Stellen des Ergebnisses im Doctest anzugeben, soll die Zahl mithilfe des Flags <span class="clisting">ELLIPSIS</span> gekürzt angegeben werden:</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">def</span> fak(n): 
    """ 
        Berechnet die Fakultaet einer ganzen Zahl. 
 
        &gt;&gt;&gt; fak(1000)<span class="cfett"> # doctest: +ELLIPSIS</span> 
        402387260077093773543702<span class="clisting">...</span>000L 
    """ 
    res = 1 
   <span class="cfett"> for</span> i<span class="cfett"> in</span> xrange(2, n+1): 
        res *= i 
   <span class="cfett"> return</span> res<br>
<span class="cfett">if</span> __name__ == "__main__": 
    doctest.testmod()</pre></div>
<p>Das Setzen des Flags wurde fett hervorgehoben.</p>
<p>Bleibt noch zu sagen, dass insbesondere die Funktion <span class="clisting">testmod</span> eine Fülle von Möglichkeiten bietet, die Testergebnisse im Programm zu verwenden oder den Prozess des Testens an Ihre Bedürfnisse anzupassen. Sollten Sie daran interessiert sein, bietet sich die Python-Dokumentation an, in der die Funktion besprochen wird.</p><a id="mj833e694a147693a7840c4727b047fd14" name="mj833e694a147693a7840c4727b047fd14"></a><a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3"><span class="cfett">21.5.2</span><span class="cfett"> Unit Tests &#8211; unittest</span>  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Das zweite Modul zur testgetriebenen Entwicklung heißt <span class="clisting">unittest</span> und ist ebenfalls in der Standardbibliothek enthalten. Das Modul <span class="clisting">unittest</span> implementiert die Funktionalität des aus Java bekannten Moduls <span class="clisting">JUnit</span>, das den De-facto-Standard zur testgetriebenen Entwicklung in Java darstellt.</p>
<p>Der Unterschied zum Modul <span class="clisting">doctest</span> besteht darin, dass die Testfälle bei <span class="clisting">unit</span> <span class="clisting">test</span> außerhalb des eigentlichen Programmcodes in einer eigenen Programmdatei in Form von regulärem Python-Code definiert werden. Das vereinfacht die Ausführung der Tests und hält die Programmdokumentation sauber. Umgekehrt ist mit dem Erstellen der Testfälle allerdings mehr Aufwand verbunden.</p>
<p>Um einen neuen Testfall bei <span class="clisting">unittest</span> zu erstellen, muss eine von der Basisklasse <span class="clisting">unittest.TestCase</span> abgeleitete Klasse erstellt werden, in der einzelne Testfälle als Methoden implementiert sind. Die folgende Klasse implementiert die gleichen Testfälle, die wir im vorherigen Kapitel mit dem Modul <span class="clisting">doctest</span> durchgeführt haben. Dabei muss die zu testende Funktion <span class="clisting">fak</span> in der Programmdatei <span class="ckursiv">fak.py</span> implementiert sein, die von unserer Test-Programmdatei als Modul eingebunden wird.</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">import</span> unittest<span class="cfett"> 
import</span> fak<br>
<span class="cfett">class</span> MeinTest(unittest.TestCase):<br>
   <span class="cfett"> def</span> testberechnung(self): 
        self.failUnlessEqual(fak.fak(5), 120) 
        self.failUnlessEqual(fak.fak(10), 3628800) 
        self.failUnlessEqual(fak.fak(20), 2432902008176640000L)<br>
   <span class="cfett"> def</span> testausnahmen(self): 
        self.failUnlessRaises(ValueError, fak.fak, -1) 
        self.failUnlessRaises(ValueError, fak.fak, 1.5)<br>
<span class="cfett">if</span><span class="clisting"> __name__ == "__main__":</span> 
   <span class="clisting"> unittest.main()</span></pre></div>
<p>Es wurde eine Klasse namens <span class="clisting">MeinTest</span> erzeugt, die von der Basisklasse <span class="clisting">unit</span> <span class="clisting">test.TestCase</span> erbt. In der Klasse <span class="clisting">MeinTest</span> wurden zwei Testmethoden namens <span class="clisting">testberechnung</span> und <span class="clisting">testausnahmen</span> implementiert. Beachten Sie, dass der Name solcher Testmethoden mit <span class="clisting">test</span> beginnen muss, damit sie später auch tatsächlich zum Testen gefunden und ausgeführt werden.</p>
<p>Innerhalb der Testmethoden werden die Methoden <span class="clisting">failUnlessEqual</span> bzw. <span class="clisting">fail</span>  <span class="clisting">UnlessRaises</span> verwendet, die den Test fehlschlagen lassen, wenn die beiden angegebenen Werte nicht gleich sind bzw. wenn die angegebene Exception nicht geworfen wurde.</p>
<p>Um den Testlauf zu starten, wird die Funktion <span class="clisting">unittest.main</span> aufgerufen. Die Fallunterscheidung</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">if</span><span class="clisting"> __name__ == "__main__":</span> 
   <span class="clisting"> unittest.main()</span></pre></div>
<p>bewirkt, dass der Unit Test nur durchgeführt wird, wenn die Programmdatei direkt ausgeführt wird, und ausdrücklich nicht, wenn die Programmdatei als Modul in ein anderes Python-Programm importiert wurde. Die aufgerufene Funktion <span class="clisting">unittest.main</span> erzeugt, um den Test durchzuführen, Instanzen aller Klassen, die im aktuellen Namensraum existieren und von <span class="clisting">unittest.TestCase</span> erben. Dann werden alle Methoden dieser Instanzen aufgerufen, deren Namen mit <span class="clisting">test</span> beginnen.</p>
<p>Die Ausgabe des Beispiels lautet im Erfolgsfall:</p>
<div class="listing"><pre class="prettyprint">.. 
----------------------------------------------------------------- 
Ran 2 tests in 0.000s 
 
OK</pre></div>
<p>Dabei stehen die beiden Punkte zu Beginn für zwei erfolgreich durchgeführte Tests. Ein fehlgeschlagener Test würde durch ein <span class="clisting">F</span> gekennzeichnet.</p>
<p>Im Fehlerfall wird die genaue Bedingung angegeben, die zum Fehler geführt hat:</p>
<div class="listing"><pre class="prettyprint">.F 
================================================================= 
FAIL: testberechnung (__main__.MeinTest) 
----------------------------------------------------------------- 
Traceback (most recent call last): 
  File "testen.py", line 7, in testberechnung 
    self.failUnlessEqual(fak.fak(5), 12) 
AssertionError: 120 != 12 
 
----------------------------------------------------------------- 
Ran 2 tests in 0.001s 
 
FAILED (failures=1)</pre></div>
<h4 class="t4"><span class="cfett">Die Klasse TestCase</span></h4>
<p>An dieser Stelle sollen die wichtigsten Methoden der Klasse <span class="clisting">TestCase</span> des Moduls <span class="clisting">unittest</span> besprochen werden. Die hier vorgestellten Methoden können entweder in einer von <span class="clisting">TestCase</span> abgeleiteten Klasse implementiert werden oder können für die Tests selbst aufgerufen werden.</p>
<p>Im Folgenden sei <span class="ckursiv">tc</span> eine Instanz der Klasse <span class="clisting">TestCase</span>.</p>
<h5 class="t5"><span class="cfett">tc.setUp()</span></h5>
<p>Die Methode <span class="clisting">setUp</span> wird vor jedem Aufruf einer der implementierten Testmethoden aufgerufen und kann somit für den Test benötigten Intialisierungscode enthalten. Eine in der Methode <span class="clisting">setUp</span> geworfene Exception wird als Error in den Testbericht eingetragen, und der Test wird abgebrochen.</p>
<h5 class="t5"><span class="cfett">tc.tearDown()</span></h5>
<p>Die Methode <span class="clisting">tearDown</span> wird nach jedem Aufruf einer der implementierten Testmethoden aufgerufen und kann somit abschließenden Code enthalten. Eine in der Methode <span class="clisting">tearDown</span> geworfene Exception wird als Error in den Testbericht eingetragen.</p>
<p>Die nun folgenden Methoden können innerhalb der Testmethoden verwendet werden, um die Testbedingungen festzulegen. Beachten Sie, dass es jeweils zwei äquivalente Methoden gibt, eine <span class="clisting">assert</span>- und eine <span class="clisting">fail</span>-Methode. Der Unterschied liegt allein in der Namensgebung, in der die Bedeutung der Methode für den Testfall entweder positiv (<span class="clisting">assert</span>-Methoden) oder negativ (<span class="clisting">fail</span>-Methoden) formuliert ist.</p>
<h5 class="t5"><span class="cfett">tc.assert_(expr[, msg]), 
tc.failUnless(expr[, msg])</span></h5>
<p>Der Test schlägt fehl, wenn <span class="ckursiv">expr</span> <span class="clisting">False</span> ergibt. Der optionale Parameter <span class="ckursiv">msg</span> kennzeichnet die Beschreibung, die für diesen Fehler angezeigt werden soll. Jede der kommenden Methoden verfügt über diesen Parameter und verwendet ihn mit der gleichen Bedeutung. Wir werden daher im Folgenden nicht mehr auf den Parameter <span class="ckursiv">msg</span> eingehen.</p>
<h5 class="t5"><span class="cfett">tc.assertEqual(first, second[, msg]), 
tc.failUnlessEqual(first, second[, msg])</span></h5>
<p>Der Test schlägt fehl, wenn die Parameter <span class="ckursiv">first</span> und <span class="ckursiv">second</span> nicht gleich sind. Beachten Sie, dass auf Gleichheit und nicht auf Identität geprüft wird.</p>
<h5 class="t5"><span class="cfett">tc.assertNotEqual(first, second[, msg]), 
tc.failIfEqual(first, second[, msg])</span></h5>
<p>Der Test schlägt fehl, wenn die Parameter <span class="ckursiv">first</span> und <span class="ckursiv">second</span> gleich sind. Beachten Sie, dass auf Gleichheit und nicht auf Identität geprüft wird.</p>
<h5 class="t5"><span class="cfett">tc.assertAlmostEqual(first, second[, places[, msg]]) 
tc.failUnlessAlmostEqual(first, second[, places[, msg]])</span></h5>
<p>Rundet <span class="ckursiv">first</span> und <span class="ckursiv">second</span> auf <span class="ckursiv">places</span> Stellen genau und vergleicht die beiden Werte. Der Test schlägt fehl, wenn die gerundeten Werte nicht gleich sind.</p>
<h5 class="t5"><span class="cfett">tc.assertNotAlmostEqual(first, second[, places[, msg]]), 
tc.failIfAlmostEqual(first, second[, places[, msg]])</span></h5>
<p>Rundet <span class="ckursiv">first</span> und <span class="ckursiv">second</span> auf <span class="ckursiv">places</span> Stellen genau und vergleicht die beiden Werte. Der Test schlägt fehl, wenn die gerundeten Werte gleich sind.</p>
<h5 class="t5"><span class="cfett">tc.assertRaises(exception, callable, …), 
tc.failUnlessRaises(exception, callable, …)</span></h5>
<p>Der Test schlägt fehl, wenn die Funktion <span class="ckursiv">callable</span> nicht die Exception <span class="ckursiv">exception</span> wirft, falls sie mit den Parametern aufgerufen wird, die anstelle der Auslassungszeichen (…) stehen.</p>
<h5 class="t5"><span class="cfett">tc.failIf(expr[, msg])</span></h5>
<p>Der Test schlägt fehl, wenn <span class="ckursiv">expr</span> <span class="clisting">True</span> ergibt.</p>
<h5 class="t5"><span class="cfett">tc.fail([msg])</span></h5>
<p>Der Test schlägt bedingungslos fehl.</p><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="http://www.galileocomputing.de/openbook/python/python_kapitel_21_005.htm"><input type="hidden" name="buchtitel" value="Python"><input type="hidden" name="Kapitel" value="21.5 Automatisiertes Testen"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="python_kapitel_21_004.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="python_kapitel_21_006.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">  </td>
<td width="160" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="160">
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="start" height="20" colspan="2">
                            &nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=oppy" class="autor">
                            <strong>Zum Katalog</strong></a>
                        </td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2">
                            <img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><a href="http://www.galileocomputing.de/1626?GPP=oppy">
                                        <img src="common/1110_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Python" title="Zum Katalog: Python">
                                        <br /><br /><br /><br /><br /><br /><br /><strong>Python</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">bestellen</a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Ihre Meinung?</strong></a></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
                                    <br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="start" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=oppy" class="autor"><strong>Buchtipps</strong></a></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1579?GPP=oppy">
                        <img src="common/9783836210904_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux" title="Zum Katalog: Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1337?GPP=oppy">
                        <img src="common/9783898428484_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Ubuntu GNU/Linux" title="Zum Katalog: Ubuntu GNU/Linux"><br /><br /><br /><br /><br /><br /><br>&nbsp;Ubuntu GNU/Linux</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1451?GPP=oppy">
                        <img src="common/9783836210874_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Praxisbuch Web 2.0" title="Zum Katalog: Praxisbuch Web 2.0"><br /><br /><br /><br /><br /><br /><br />&nbsp;Praxisbuch Web 2.0</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1142?GPP=oppy">
                        <img src="common/9783898427388_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: UML 2.0" title="Zum Katalog: UML 2.0"><br /><br /><br /><br /><br /><br /><br />&nbsp;UML 2.0</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/966?GPP=oppy">
                        <img src="common/9783898426244_s.gif" width="94" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Praxisbuch Objektorientierung" title="Zum Katalog: Praxisbuch Objektorientierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Praxisbuch Objektorientierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1477?GPP=oppy">
                        <img src="common/1039_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in SQL" title="Zum Katalog: Einstieg in SQL"><br /><br /><br /><br /><br /><br /><br />&nbsp;Einstieg in SQL</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1234?GPP=oppy">
                        <img src="common/1015_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: IT-Handbuch für Fachinformatiker" title="Zum Katalog: IT-Handbuch für Fachinformatiker"><br /><br /><br /><br /><br /><br /><br>&nbsp;IT-Handbuch für Fachinformatiker</a><br /><br /></td>
                    </tr>
                </table></td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Shopping</strong></span></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=oppy"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</td>
</tr>
</table><br><br><hr width="70%" align="center"><br><div align="center">
<p class="standard"><b>Copyright © Galileo Press 2008</b><br>Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken. Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung, Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>

</html>
