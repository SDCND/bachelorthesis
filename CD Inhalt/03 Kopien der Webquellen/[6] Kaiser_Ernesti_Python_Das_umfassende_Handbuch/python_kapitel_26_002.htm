<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: Python – 26.2 Schreiben von Extensions</title>
<meta name="title" content="Galileo Computing :: Python - 26.2 Schreiben von Extensions">
<meta name="author" content="Peter Kaiser, Johannes Ernesti">
<meta name="publisher" content="Galileo Press 2008">
<meta name="copyright" content="Galileo Press 2008">
<meta name="Description" content="Python - Das umfassende Handbuch – 26.2 Schreiben von Extensions">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="python_kapitel_26_001.htm">
<link rel="next" href="python_kapitel_26_003.htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=oppy"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=oppy"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=oppy" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_01_001.htm#mj67a594b305e4109145454ddc0d55999c">1 Einleitung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_02_001.htm#mjddfab2e530e1ced3efb614b75430300d">2 Überblick über Python</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_03_001.htm#mj936060d19c41bd12bf740798a2280ed0">3 Die Arbeit mit Python</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_04_001.htm#mj4c3be3990be6964addc0f6d0dc22f9d8">4 Der interaktive Modus</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_05_001.htm#mjddf21128ad2999d9e2a37e5112a0af06">5 Grundlegendes zu Python-Programmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_06_001.htm#mj3c43dbe4a08e5559d01e50286484c126">6 Kontrollstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_07_001.htm#mj4ebbbff6e4edb4fe615e242a01d77f27">7 Das Laufzeitmodell</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_08_001.htm#mj5434917b0e68fc12d539b3d9f605c69d">8 Basisdatentypen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_09_001.htm#mj7db54ea5091e23f706b1786ead1a782f">9 Benutzerinteraktion und Dateizugriff</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_10_001.htm#mjf74b0a739c10c2f7132913c19e91246f">10 Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_11_001.htm#mj3e41238df9387de38f2c931eba1bfeb9">11 Modularisierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_12_001.htm#mjcd1790d94142bd3f3a263231dbf0e3f7">12 Objektorientierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_13_001.htm#mj4ec2d9702da110e2dacd99679d3c813d">13 Weitere Spracheigenschaften</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_14_001.htm#mj22b60f53fd2027b93c076a524242b35b">14 Mathematik</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_15_001.htm#mjca183f321ad76918bcff867c4ffe4fab">15 Strings</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_16_001.htm#mjbc5f03a28f08a0ff6fff3f6eafb13845">16 Datum und Zeit</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_17_001.htm#mj1ca63a01c44856e9ecf8daef9834ac38">17 Schnittstelle zum Betriebssystem</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_18_001.htm#mj9e2e147ec7c1c409ab62884ed2afaa21">18 Parallele Programmierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_19_001.htm#mj5f8739be6f0fbee26d20565b4eeb8166">19 Datenspeicherung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_20_001.htm#mj6a610f312e2abfe628f8f50a8629087d">20 Netzwerkkommunikation</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_21_001.htm#mjd1f17b81729d3362ce1283c29a6064f5">21 Debugging</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_22_001.htm#mj7398fb17f09867fc123360d9b3066e94">22 Distribution von Python-Projekten</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_23_001.htm#mj2213eb2f7fc258333f88f873ac4a8051">23 Optimierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_24_001.htm#mj0bdf563dc1f3ef7638dab0dfb6bdd753">24 Grafische Benutzeroberflächen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_25_001.htm#mjbea967a6f2023581a39d524b6d91a141">25 Python als serverseitige Programmiersprache im WWW mit Django</a></td>
</tr>
<tr>
<td><a class="navh" href="##mj43e9e45f2e92366984e5b113f832514f">26 Anbindung an andere Programmiersprachen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_27_001.htm#mj30bed08497d2de4e7e72cbdeefa9fc78">27 Insiderwissen</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_28_001.htm#mj8586665aff70d4410c8ba7725befb825">28 Zukunft von Python</a></td>
</tr>
<tr>
<td><a class="navnav" href="python_kapitel_A_001.htm#mjd7cca37a6c80d7ec0d715951f4148f05">A Anhang</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download.galileo-press.de/openbook/python/galileocomputing_python.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 4,8 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/1626?GPP=oppy" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="python_kapitel_26_001.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=oppy" class="navnav">Galileo Computing /</a><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=oppy" class="navnav"> &lt;openbook&gt; /</a><a href="index.htm" class="navnav"> Python</a></div></td>
<td align="right" width="25%"><div align="right"><a href="python_kapitel_26_003.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/1626?GPP=oppy" class="buchtitel">Python</a><span class="autor"> von Peter Kaiser, Johannes Ernesti</span><br><span class="untertitel">Das umfassende Handbuch - Aktuell zu Python 2.5</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/1626?GPP=oppy" class="navnav"><img src="common/9783836211109.gif" border="0" alt="Buch: Python" title="Buch: Python"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/1626?GPP=oppy"><span class="autor"><strong>Python</strong><br>gebunden, mit CD<br>819 S., 39,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1110-9</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="python_kapitel_26_001.htm#mj43e9e45f2e92366984e5b113f832514f" class="navnav">26 Anbindung an andere Programmiersprachen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="python_kapitel_26_001.htm#mj79293d95df76d9b449a1e6e806fd1fa1" class="navnav">26.1 Dynamisch ladbare Bibliotheken &#8211; ctypes</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_26_001.htm#mj1c24ac56e553b4b791199dbfcba82c9b" class="navnav">26.1.1 Ein einfaches Beispiel</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_26_001.htm#mje61621c82f7956ef7804559ec3d1346d" class="navnav">26.1.2 Die eigene Bibliothek</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_26_001.htm#mjcfd01d151b691d22000db87b26aabc88" class="navnav">26.1.3 Schnittstellenbeschreibung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_26_001.htm#mj39ee465fe9dbac00d4eef8eee39b23db" class="navnav">26.1.4 Verwendung des Moduls</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mje3a3733f3f8de78f7ba77dd8e0ac5901" class="navh">26.2 Schreiben von Extensions</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj4dea29d71bb2ed5b16ac651367b420d4" class="navh">26.2.1 Ein einfaches Beispiel</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj07ab783270f2137d940528c629ec76b2" class="navh">26.2.2 Exceptions</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj4d44675e63b648fe7fb94e305a18b192" class="navh">26.2.3 Erzeugen der Extension</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj082b77d3a9087beb91b7ee7b4fb57796" class="navh">26.2.4 Reference Counting</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="python_kapitel_26_003.htm#mjc6b49d1c4e0ceb18304013caf898a2e0" class="navnav">26.3 Python als eingebettete Skriptsprache</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_26_003.htm#mj0d2f049d403e75f2bad50133564f01e5" class="navnav">26.3.1 Ein einfaches Beispiel</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_26_003.htm#mj2ba31933b924c7593b5e7dfb0e8d423a" class="navnav">26.3.2 Ein komplexeres Beispiel</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="python_kapitel_26_003.htm#mj62d29fde1147d5eccb00da7f6cafa3d6" class="navnav">26.3.3 Python-API-Referenz</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mje3a3733f3f8de78f7ba77dd8e0ac5901" name="mje3a3733f3f8de78f7ba77dd8e0ac5901"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">26.2</span><span class="cfett"> <a id="Rxx_ref180775240" name="Rxx_ref180775240"></a>Schreiben von Extensions</span>  <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Im letzten Kapitel haben wir uns mit einem Ansatz beschäftigt, bestimmte Teile eines Programms in C zu implementieren, in eine dynamische Bibliothek auszulagern und dann aus dem Python-Programm heraus anzusprechen. Das ist, wie Sie sich sicherlich vorstellen können, für eine Anwendung eine tolle Sache, doch gerade beim Schreiben eines Moduls wäre der <span class="clisting">ctypes</span>-Ansatz aufgrund seiner Einschränkungen an der Schnittstelle nicht besonders praktikabel.</p>
<p>Wir sind im Laufe des Buchs bereits öfters auf Bibliotheken wie <span class="clisting">cStringIO</span> oder <span class="clisting">cProfile</span> gestoßen, bei denen gesagt wurde, dass sie aus Effizienzgründen in C geschrieben wurden. Offensichtlich ist es also möglich und tatsächlich auch durchaus üblich, ein Python-Modul in reinem C zu schreiben und dann ohne <span class="clisting">ctypes</span> zu verwenden. Solche Module werden <span class="ckursiv">Extentions</span> (dt. <span class="ckursiv">Erweiterungen</span>) genannt.</p>
<p>Solche Extensions werden mithilfe der sogenannten <span class="ckursiv">Python API</span> geschrieben. Mit dieser API ist es möglich, in C beispielsweise Instanzen eines Python-Datentyps zu erzeugen und zu verarbeiten. Dies ist unerlässlich, wenn man bedenkt, dass die in C geschriebene Extension später als vollwertiges Modul auftreten soll und dass auf keinen Fall Probleme an der Schnittstelle, wie sie beispielsweise mit <span class="clisting">ctypes</span> auftreten, vorkommen dürfen. Auch das Werfen von Python-Exceptions aus einer C-Extension heraus wird mithilfe der Python API möglich.</p>
<p>Sie werden in diesem Kapitel nur eine knappe Referenz zur Python API finden, da wir hier primär einen praxisorientierten Einstieg in das Schreiben von Extensions bieten möchten. Eine umfassende Referenz finden Sie in der Python-Dokumentation unter dem Stichwort »Python/C API«. Die Dokumentation enthält außerdem ausführliche Informationen zum Schreiben von Erweiterungen bzw. zum Einbetten des Python-Interpreters in ein C-Programm unter dem Stichwort <span class="ckursiv">Extending and Embedding Python</span>.</p><a id="mj4dea29d71bb2ed5b16ac651367b420d4" name="mj4dea29d71bb2ed5b16ac651367b420d4"></a><a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3"><span class="cfett">26.2.1</span><span class="cfett"> Ein einfaches Beispiel</span>  <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>In diesem Abschnitt soll eine einfache Beispiel-Extension in C geschrieben werden. Wir nehmen uns vor, eine Extension namens <span class="clisting">chiffre</span> zu schreiben, die verschiedene Funktionen zur Verschlüsselung eines Strings bereitstellt. Da es sich um ein Beispiel handelt, werden wir uns auf eine einzelne Funktion namens <span class="clisting">caesar</span> beschränken, die eine Verschiebechiffre, auch »Cäsar-Verschlüsselung« genannt, durchführen soll. Die Funktion soll später folgendermaßen verwendet werden können:</p>
<div class="listing"><pre class="prettyprint">&gt;&gt;&gt; chiffre.caesar("HALLOWELT", 13) 
'UNYYBJRYG'</pre></div>
<p>Dabei entspricht der zweite Parameter der Anzahl Stellen, um die jeder Buchstabe des ersten Parameters verschoben wird.</p>
<p>Im Folgenden werden wir eine Extension schreiben, die das Modul <span class="clisting">chiffre</span> inklusive der Funktion <span class="clisting">caesar</span> für ein Python-Programm bereitstellt. Die Quelldatei der Erweiterung lautet <span class="ckursiv">chiffre.c</span>. Der Quelltext der Erweiterung soll nun Schritt für Schritt besprochen werden.</p>
<div class="listing"><pre class="prettyprint">#include &lt;Python.h&gt;<br>
<span class="cfett">static</span> PyObject *chiffre_caesar(PyObject *self, PyObject *args);</pre></div>
<p>Zunächst wird der Header der Python API eingebunden. Sie finden die Header-Datei <span class="ckursiv">Python.h</span> im Unterordner <span class="ckursiv">include</span> Ihrer Python-Installation. Außerdem schreiben wir zu Beginn der Quelldatei den Prototyp der Funktion <span class="clisting">chiffre_caesar</span>, die später der Funktion <span class="clisting">caesar</span> des Moduls <span class="clisting">chiffre</span> entsprechen soll.</p>
<p>Beachten Sie, dass in der Header-Datei <span class="ckursiv">Python.h</span> einige Präprozessor-Anweisungen enthalten sind, die sich auf andere Header-Dateien auswirken. Aus diesem Grund sollte <span class="ckursiv">Python.h</span> immer vor den Standard-Headern eingebunden werden.</p>
<p>Dann wird die sogenannte <span class="ckursiv">Method Table</span> erstellt, die alle Funktionen der Extension auflistet:</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">static</span> PyMethodDef ChiffreMethods[] = 
    { 
    {"caesar", chiffre_caesar, METH_VARARGS, 
     "Perform Caesar cipher encryption."}, 
    {NULL, NULL, 0, NULL} 
    };</pre></div>
<p>Jeder Eintrag der Method Table enthält zunächst den Namen, den die Funktion oder Methode in Python tragen soll, dann den Namen der assoziierten C-Funktion, dann die Kennzeichnung der Art der Parameterübergabe und schlussendlich eine Beschreibung der Funktion als String. Das Makro <span class="clisting">METH_VARARGS</span> besagt, dass alle Parameter, die der Funktion <span class="clisting">caesar</span> in Python übergeben werden, in der C–Funktion <span class="clisting">chiffre_caesar</span> in Form eines Tupels ankommen. Dies ist die bevorzugte Art der Parameterübergabe.</p>
<p>Ein mit Nullen gefüllter Eintrag beendet die Method Table.</p>
<p>Es folgt die Initialisierungsfunktion der Erweiterung namens <span class="clisting">initchiffre</span>:</p>
<div class="listing"><pre class="prettyprint">PyMODINIT_FUNC initchiffre(<span class="cfett">void</span>) 
    { 
    Py_InitModule("chiffre", ChiffreMethods); 
    }</pre></div>
<p>Sie wird vom Interpreter aufgerufen, wenn das Modul <span class="clisting">chiffre</span> zum ersten Mal eingebunden wird, und hat die Aufgabe, das Modul einzurichten und dem Interpreter die Method Table (<span class="clisting">ChiffreMethods</span>) zu übergeben. Dazu wird die Funktion <span class="clisting">Py_InitModule</span> aufgerufen.</p>
<p>Beachten Sie, dass die Funktion <span class="clisting">initchiffre</span> genannt werden muss, wobei <span class="clisting">chiffre</span> natürlich bei einem anderen Modulnamen entsprechend angepasst werden muss.</p>
<p>Jetzt folgt die Funktion <span class="clisting">chiffre_caesar</span>. Das ist die C-Funktion, die bei einem Aufruf der Python-Funktion <span class="clisting">chiffre.caesar</span> aufgerufen wird.</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">static</span><span class="clisting"> PyObject *chiffre_caesar(PyObject *self, PyObject *args)</span> 
   <span class="clisting"> {</span> 
   <span class="cfett"> char</span><span class="clisting"> *text, *c, *e;</span> 
   <span class="clisting"> PyObject *ergebnis;</span> 
   <span class="cfett"> int</span><span class="clisting"> cipher;</span><br>
   <span class="cfett"> if</span><span class="clisting">(!PyArg_ParseTuple(args, "si", &amp;text, &amp;cipher))</span> 
       <span class="cfett"> return</span><span class="clisting"> NULL;</span><br>
   <span class="clisting"> ergebnis = PyString_FromStringAndSize(NULL, strlen(text));</span> 
   <span class="clisting"> e = PyString_AsString(ergebnis);</span><br>
   <span class="cfett"> for</span><span class="clisting">(c = text; *c; c++, e++)</span> 
       <span class="clisting"> *e = ((*c</span> -<span class="clisting"> 'A' + cipher) % 26) + 'A';</span><br>
   <span class="cfett"> return</span><span class="clisting"> ergebnis;</span> 
   <span class="clisting"> }</span></pre></div>
<p>Dabei werden als Parameter immer zwei Pointer auf eine <span class="clisting">PyObject</span>-Struktur übergeben. Eine solche <span class="clisting">PyObject</span>-Struktur entspricht ganz allgemein einer Referenz auf ein Python-Objekt. In C werden also alle Instanzen aller Datentypen auf <span class="clisting">PyObject</span>-Strukturen abgebildet. Durch Funktionen der Python-API lassen sich dann datentyp-spezifische Eigenschaften der Instanzen auslesen. Doch kommen wir nun zur Bedeutung der übergebenen Parameter im Einzelnen.</p>
<p>Der erste Parameter, <span class="clisting">self</span>, würde nur dann benötigt, wenn die Funktion <span class="clisting">chiffre_caesar</span> eine Python-Methode implementieren würde, und ist in diesem Beispiel immer <span class="clisting">NULL</span>. Der zweite Parameter, <span class="clisting">args</span>, ist ein Tupel und enthält alle der Python-Funktion übergebenen Parameter. Auf die Parameter kann über die API-Funktion <span class="clisting">PyArg_ParseTuple</span> zugegriffen werden.</p>
<p>Die Funktion <span class="clisting">PyArg_ParseTuple</span> bekommt zunächst den Parameter <span class="clisting">args</span> selbst übergeben und danach einen String, der die Datentypen der enthaltenen Parameter kennzeichnet. <span class="clisting">s</span> steht dabei für einen String und <span class="clisting">i</span> für eine ganze Zahl. Im Folgenden zeigt <span class="clisting">text</span> auf den übergebenen String, während <span class="clisting">cipher</span> den zweiten übergebenen Parameter, die ganze Zahl, enthält. Beachten Sie, dass <span class="clisting">text</span> auf den Inhalt des übergebenen Python-Strings zeigt und aus diesem Grund nicht verändert werden darf.</p>
<p>Nachdem der zu verschlüsselnde Text in <span class="clisting">text</span> und die zu verwendende Anzahl Stellen in <span class="clisting">cipher</span> stehen, kann die tatsächliche Verschlüsselung durchgeführt werden. Dazu wird zunächst ein neuer String mit der Länge des Strings <span class="clisting">text</span> erzeugt. Da dieser String gerade erst erzeugt worden ist und somit keine anderen Referenzen auf ihn verweisen können, dürfen wir im Folgenden in den internen Buffer des Strings schreiben. Zum Verschlüsseln des Strings wird in einer Schleife über alle Buchstaben des übergebenen Strings iteriert und jeder Buchstabe um die angegebene Anzahl Stellen verschoben. Der auf diese Weise veränderte Buchstabe wird dann in den neu erstellten String geschrieben.</p>
<p>Beachten Sie, dass dieser Algorithmus weder für Kleinbuchstaben noch für Sonderzeichen, sondern ausschließlich für Großbuchstaben funktioniert. Diese Einschränkung erhöht nicht nur die Übersicht, sondern erlaubt es uns später, einen &#8211; zugegebenermaßen künstlichen &#8211; Fehlerfall zu erzeugen.</p><a id="mj07ab783270f2137d940528c629ec76b2" name="mj07ab783270f2137d940528c629ec76b2"></a><a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3"><span class="cfett">26.2.2</span><span class="cfett"> Exceptions</span>  <a href="#t2t34"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Wir haben bereits gesagt, dass der in der Funktion <span class="clisting">chiffre_caesar</span> verwendete Algorithmus nur mit Strings arbeiten kann, die allein aus ASCII-Großbuchstaben bestehen. Es wäre natürlich ein Leichtes, die Funktion <span class="clisting">chiffre_caesar</span> dahingehend anzupassen, dass auch Kleinbuchstaben verschlüsselt und Sonderzeichen übersprungen werden. Doch zu Demonstrationszwecken soll in diesem Beispiel stattdessen eine <span class="clisting">ValueError</span>-Exception geworfen werden, wenn der übergebene String nicht ausschließlich aus ASCII-Großbuchstaben besteht.</p>
<p>Eine eingebaute Exception kann mithilfe der Funktion <span class="clisting">PyErr_SetString</span> geworfen werden, wobei der Funktion der Exceptiontyp, in diesem Fall <span class="clisting">PyExc_ValueError</span>, und die Fehlerbeschreibung übergeben wird. Die Funktion <span class="clisting">chiffre_caesar</span> sieht inklusive Fehlerbehandlung so aus:</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">static</span><span class="clisting"> PyObject *chiffre_caesar(PyObject *self, PyObject *args)</span> 
   <span class="clisting"> {</span> 
   <span class="cfett"> char</span><span class="clisting"> *text, *c, *e;</span> 
   <span class="clisting"> PyObject *ergebnis;</span> 
   <span class="cfett"> int</span><span class="clisting"> cipher;</span><br>
   <span class="cfett"> if</span><span class="clisting">(!PyArg_ParseTuple(args, "si", &amp;text, &amp;cipher))</span> 
       <span class="cfett"> return</span><span class="clisting"> NULL;</span><br>
   <span class="clisting"> ergebnis = PyString_FromStringAndSize(NULL, strlen(text));</span> 
   <span class="clisting"> e = PyString_AsString(ergebnis);</span><br>
   <span class="cfett"> for</span><span class="clisting">(c = text; *c; c++, e++)</span> 
       <span class="clisting"> {</span> 
       <span class="cfett"> if</span><span class="clisting">((*c &lt; 'A') || (*c &gt; 'Z'))</span> 
           <span class="clisting"> {</span> 
           <span class="clisting"> PyErr_SetString(PyExc_ValueError,</span> 
                           <span class="clisting"> "Character out of range");</span> 
           <span class="clisting"> Py_DECREF(ergebnis);</span> 
           <span class="cfett"> return</span><span class="clisting"> NULL;</span> 
           <span class="clisting"> }</span><br>
       <span class="clisting"> *e = ((*c</span> -<span class="clisting"> 'A' + cipher) % 26) + 'A';</span> 
       <span class="clisting"> }</span> 
   <span class="cfett"> return</span><span class="clisting"> ergebnis;</span> 
   <span class="clisting"> }</span></pre></div>
<p>Direkt nach dem Setzen der Exception wird das Makro <span class="clisting">Py_DECREF</span> verwendet. Dieses Makro ist dazu da, den Reference Count der Instanz <span class="clisting">ergebnis</span> zu verringern. Näheres dazu erfahren Sie in Abschnitt <a href="#Rxx_ref180158285">26.2.4</a>.</p>
<p>Nachdem die Extension kompiliert, gelinkt und installiert wurde, (Näheres zu diesen Vorgängen erfahren Sie im nächsten Abschnitt), können wir sie tatsächlich im interaktiven Modus ausprobieren:</p>
<div class="listing"><pre class="prettyprint">&gt;&gt;&gt;<span class="cfett"> import</span> chiffre 
&gt;&gt;&gt; chiffre.caesar("HALLOWELT", 13) 
'UNYYBJRYG' 
&gt;&gt;&gt; chiffre.caesar("UNYYBJRYG", 13) 
'HALLOWELT' 
&gt;&gt;&gt; chiffre.caesar("Hallo Welt", 13) 
Traceback (most recent call last): 
  File "&lt;stdin&gt;", line 1, in &lt;module&gt; 
ValueError: Character out of range</pre></div>
<p>Beachten Sie, dass wir die Cäsar-Verschlüsselung bislang immer mit dem Verschiebungsparameter <span class="clisting">13</span> durchgeführt haben. Das entspricht dem <span class="ckursiv">ROT13</span>-Algorithmus, der eine relativ große Bekanntheit genießt (was aber nicht heißt, dass er besonders sicher wäre). Der Vorteil von ROT13 ist, dass der verschlüsselte String durch nochmaliges Verschlüsseln mit ROT13 entschlüsselt wird, wie auch im obigen Beispiel zu sehen ist. Selbstverständlich sind aber auch andere Verschiebungsparameter möglich.</p><a id="mj4d44675e63b648fe7fb94e305a18b192" name="mj4d44675e63b648fe7fb94e305a18b192"></a><a name="t33"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t34"></a><h3 class="t3"><span class="cfett">26.2.3</span><span class="cfett"> <a id="Rxx_ref180764878" name="Rxx_ref180764878"></a><a id="Rxx_ref180764858" name="Rxx_ref180764858"></a>Erzeugen der Extension</span>  <a href="#t2t35"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t33"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Da die soeben geschriebene Quelldatei <span class="ckursiv">chiffre.c</span> in einer ganz bestimmten Art kompiliert und gelinkt werden muss, kommt es uns nur zupass, dass das Paket <span class="clisting">distutils</span> auch das Kompilieren und Linken von Erweiterungen automatisiert.</p>
<p>Beachten Sie, dass zum Kompilieren der Extension ein C-Compiler auf Ihrem System installiert sein muss. Unter Linux wird vom Paket <span class="clisting">distutils</span> der GCC- und unter Windows der MSVC-Compiler von Visual Studio 2003 (sofern es installiert ist) verwendet. Visual Studio kann inzwischen in einer eingeschränkten Version kostenlos von Microsoft bezogen werden. Sollten Sie ein Windows-System einsetzen und Visual Studio 2003 nicht installiert haben, bietet Ihnen das Paket <span class="clisting">distutils</span> an, stattdessen eine MinGW-Installation zu verwenden.</p>
<p>Das Installationsscript <span class="ckursiv">setup.py</span> sieht in Bezug auf unsere einfache Beispielextension folgendermaßen aus:</p>
<div class="listing"><pre class="prettyprint"><span class="cfett">from</span> distutils.core<span class="cfett"> import</span> setup, Extension<br>
modul = Extension("chiffre", sources=["chiffre.c"]) 
setup( 
     name = "PyChiffre", 
     version = "1.0", 
     description = "Module for encryption techniques.", 
     ext_modules = [modul] 
     )</pre></div>
<p>Zunächst wird eine Instanz der Klasse <span class="clisting">Extension</span> erzeugt und ihrem Konstruktor der Name der Extension und eine Liste der zugrunde liegenden Quelldateien übergeben. Beim Aufruf der Funktion <span class="clisting">setup</span> wird, abgesehen von den üblichen Parametern, der Schlüsselwortparameter <span class="clisting">ext_modules</span> übergeben. Dort muss eine Liste von <span class="clisting">Extension</span>-Instanzen übergeben werden, die mit dem Installationsscript kompiliert, gelinkt und in die Distribution aufgenommen werden sollen.</p>
<p>Jetzt kann das Installationsscript wie gewohnt ausgeführt werden und kompiliert bzw. installiert die Erweiterung automatisch.</p>
<p>Neben dem Schlüsselwortparameter <span class="clisting">sources</span> können bei der Instanziierung der Klasse <span class="clisting">Extension</span> noch weitere Parameter übergeben werden, die in der folgenden Tabelle kurz erläutert werden.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter"><strong>Tabelle 26.2    </strong>Schlüsselwortparameter des <span class="clisting">Extension</span>-Konstruktors
</caption>
<tr>
<td class="tabellenkopf"><span class="cfett">Parameter</span>
</td>
<td class="tabellenkopf"><span class="cfett">Bedeutung</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="clisting"><span class="clisting">include_dirs</span></pre></div>
</td>
<td class="tabellentext">
<p>Eine Liste von Verzeichnissen, die für das Kompilieren der Erweiterung benötigte Header-Dateien enthalten</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="clisting"><span class="clisting">define_macros</span></pre></div>
</td>
<td class="tabellentext">
<p>Eine Liste von Tupeln, über die beim Kompilieren der Erweiterung bestimmte Makros mit bestimmten Werten definiert werden können. Das Tupel muss folgende Struktur haben: <span class="clisting">("MAKRONAME", "Wert")</span>.</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="clisting"><span class="clisting">undef_macros</span></pre></div>
</td>
<td class="tabellentext">
<p>Eine Liste von Makronamen, die beim Kompilieren nicht definiert sein sollen</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="clisting"><span class="clisting">libraries</span></pre></div>
</td>
<td class="tabellentext">
<p>Eine Liste von Bibliotheksnamen, gegen die die Erweiterung gelinkt werden soll</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="clisting"><span class="clisting">librariy_dirs</span></pre></div>
</td>
<td class="tabellentext">
<p>Eine Liste von Verzeichnissen, in denen nach den bei <span class="clisting">libraries</span> angegebenen Bibliotheken gesucht wird</p>
</td>
</tr>
</table><br><p>Nachdem die Extension mittels <span class="clisting">distutils</span> kompiliert und installiert wurde, kann sie in einer Python Shell verwendet werden:</p>
<div class="listing"><pre class="prettyprint">&gt;&gt;&gt; import chiffre 
&gt;&gt;&gt; chiffre.caesar("HALLOWELT", 13) 
'UNYYBJRYG' 
&gt;&gt;&gt; chiffre.caesar("UNYYBJRYG", 13) 
'HALLOWELT'</pre></div><a id="mj082b77d3a9087beb91b7ee7b4fb57796" name="mj082b77d3a9087beb91b7ee7b4fb57796"></a><a name="t34"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t35"></a><h3 class="t3"><span class="cfett">26.2.4</span><span class="cfett"> Reference Counting</span>  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t34"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Wie Sie wissen, basiert die Speicherverwaltung Pythons auf einem sogenannten <span class="ckursiv">Reference-Count</span><span class="ckursiv">ing</span>-Algorithmus. Das bedeutet, dass Instanzen zur Entsorgung freigegeben werden, sobald keine Referenzen mehr auf sie bestehen. Das hat den Vorteil, dass sich der Programmierer nicht um das Freigeben von allokiertem Speicher zu kümmern braucht.</p>
<p>Vermutlich wissen Sie ebenfalls, dass es so etwas wie Reference Counting in C nicht gibt, sondern dass dort der Programmierer für die Speicherverwaltung selbst verantwortlich ist. Wie verträgt es sich damit also, wenn man Python-Instanzen in einem C-Programm verwendet?</p>
<p>Grundsätzlich sollten Sie sich von dem C-Idiom verabschieden, im Besitz einer bestimmten Instanz bzw. in diesem Fall einer <span class="clisting">PyObject</span>-Struktur zu sein. Vielmehr können Sie allenfalls im Besitz einer Referenz auf eine Instanz bzw. eines Pointers auf eine <span class="clisting">PyObject</span>-Struktur sein. Damit implementiert die Python API im Grunde das Speichermodell von Python in C. Im Gegensatz zum Speichermodell von Python erhöht bzw. verringert sich der Referenzzähler einer Instanz jedoch nicht automatisch, sondern muss in einer C-Extension explizit mitgeführt werden. Dazu können die Makros <span class="clisting">Py_INCREF</span> und <span class="clisting">Py_DECREF</span> der Python API folgendermaßen verwendet werden:</p>
<div class="listing"><pre class="prettyprint">PyObject *string = PyString_FromString("Hallo Welt"); 
Py_INCREF(string); 
Py_DECREF(string); 
Py_DECREF(string);</pre></div>
<p>Zunächst wird mithilfe der Funktion <span class="clisting">PyString_FromString</span> eine Instanz des Python-Datentyps <span class="clisting">str</span> erzeugt. In diesem Moment besitzen Sie eine Referenz auf diese Instanz. Der Reference Count ist damit gleich <span class="clisting">1</span>. Im Folgenden wird der Reference Count durch die Makros <span class="clisting">Py_INCREF</span> und <span class="clisting">Py_DECREF</span> einmal erhöht und zweimal verringert. Am Ende des Beispiels erreicht der Reference Count <span class="clisting">0</span>, und der erzeugte String wird der Garbage Collection zum Fraß vorgeworfen.</p>
<p>Das hier besprochene Beispiel ist zugegebenermaßen nicht gerade sinnvoll. Im nächsten Abschnitt wird jedoch ein Beispielprogramm erarbeitet, in dem die Anwendung des Reference Countings in der Praxis zu sehen ist.</p>
<p>Jetzt bliebe nur noch die Frage zu klären, wann Sie den Referenzzähler erhöhen bzw. verringern müssen. Immer dann, wenn Sie in Ihrem Programm eine Instanz eines Python-Datentyps erzeugen und eine oder mehrere Referenzen auf diese Instanz halten, müssen Sie diese Referenzen freigeben, wenn sie nicht mehr benötigt werden. Sollten Sie die Referenzen nicht freigeben, verweilt die Instanz im Speicher, obwohl sie eigentlich nicht mehr benötigt wird. Es handelt sich dann um ein sogenanntes <span class="ckursiv">Memory Leak</span>, und Memory Leaks sind kein besonders erstrebenswerter Umstand in einem Programm.</p>
<p>Die zweite Möglichkeit sind sogenannte <span class="ckursiv">geliehene Referenzen</span> (engl. <span class="ckursiv">borrowed references</span>). Solche Referenzen sind beispielsweise über Funktionsparameter an Ihr Programm weitergereicht worden, gehören Ihnen aber nicht. Das bedeutet auch, dass Sie solche Referenzen nicht freizugeben brauchen. Ein Beispiel für geliehene Referenzen sind Funktionsparameter, die Sie grundsätzlich nicht freigeben brauchen. Wenn Sie eine geliehene Referenz zu einer eigenen Referenz aufwerten möchten, müssen Sie den Referenzzähler der dahinter liegenden Instanz mittels <span class="clisting">Py_INCREF</span> erhöhen. Das Freigeben von geliehenen Referenzen führt dazu, dass danach möglicherweise auf Speicherbereiche zugegriffen wird, die bereits freigegeben worden sind. Das kann in einigen Fällen gut gehen, führt aber häufig zu einem <span class="ckursiv">Speicherzugriffsfehler</span>. Ähnlich wie Memory Leaks sollten Sie Speicherzugriffsfehler nach Möglichkeit vermeiden.</p>
<p>Als letzte Möglichkeit können Sie eine vollwertige Referenz in Form eines Rückgabewertes an eine andere Funktion abgeben. Sie brauchen sich also nicht um die Freigabe Ihrer zurückgegebenen Instanzen kümmern.</p><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="http://www.galileocomputing.de/openbook/python/python_kapitel_26_002.htm"><input type="hidden" name="buchtitel" value="Python"><input type="hidden" name="Kapitel" value="26.2 Schreiben von Extensions"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="python_kapitel_26_001.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="python_kapitel_26_003.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">  </td>
<td width="160" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="160">
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="start" height="20" colspan="2">
                            &nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=oppy" class="autor">
                            <strong>Zum Katalog</strong></a>
                        </td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2">
                            <img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><a href="http://www.galileocomputing.de/1626?GPP=oppy">
                                        <img src="common/1110_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Python" title="Zum Katalog: Python">
                                        <br /><br /><br /><br /><br /><br /><br /><strong>Python</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">bestellen</a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Ihre Meinung?</strong></a></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
                                    <br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="start" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=oppy" class="autor"><strong>Buchtipps</strong></a></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1579?GPP=oppy">
                        <img src="common/9783836210904_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux" title="Zum Katalog: Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1337?GPP=oppy">
                        <img src="common/9783898428484_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Ubuntu GNU/Linux" title="Zum Katalog: Ubuntu GNU/Linux"><br /><br /><br /><br /><br /><br /><br>&nbsp;Ubuntu GNU/Linux</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1451?GPP=oppy">
                        <img src="common/9783836210874_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Praxisbuch Web 2.0" title="Zum Katalog: Praxisbuch Web 2.0"><br /><br /><br /><br /><br /><br /><br />&nbsp;Praxisbuch Web 2.0</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1142?GPP=oppy">
                        <img src="common/9783898427388_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: UML 2.0" title="Zum Katalog: UML 2.0"><br /><br /><br /><br /><br /><br /><br />&nbsp;UML 2.0</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/966?GPP=oppy">
                        <img src="common/9783898426244_s.gif" width="94" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Praxisbuch Objektorientierung" title="Zum Katalog: Praxisbuch Objektorientierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Praxisbuch Objektorientierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1477?GPP=oppy">
                        <img src="common/1039_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in SQL" title="Zum Katalog: Einstieg in SQL"><br /><br /><br /><br /><br /><br /><br />&nbsp;Einstieg in SQL</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1234?GPP=oppy">
                        <img src="common/1015_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: IT-Handbuch für Fachinformatiker" title="Zum Katalog: IT-Handbuch für Fachinformatiker"><br /><br /><br /><br /><br /><br /><br>&nbsp;IT-Handbuch für Fachinformatiker</a><br /><br /></td>
                    </tr>
                </table></td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Shopping</strong></span></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=oppy"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</td>
</tr>
</table><br><br><hr width="70%" align="center"><br><div align="center">
<p class="standard"><b>Copyright © Galileo Press 2008</b><br>Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken. Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung, Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>

</html>
